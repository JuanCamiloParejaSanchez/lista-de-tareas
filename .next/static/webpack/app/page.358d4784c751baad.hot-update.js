"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useTasks.ts":
/*!***************************!*\
  !*** ./hooks/useTasks.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TasksProvider: function() { return /* binding */ TasksProvider; },\n/* harmony export */   useTasks: function() { return /* binding */ useTasks; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ TasksProvider,useTasks auto */ \nconst initialState = {\n    tasks: [],\n    loading: false,\n    error: null\n};\nfunction tasksReducer(state, action) {\n    switch(action.type){\n        case \"ADD_TASK\":\n            return {\n                ...state,\n                tasks: [\n                    ...state.tasks,\n                    action.payload\n                ],\n                error: null\n            };\n        case \"UPDATE_TASK\":\n            return {\n                ...state,\n                tasks: state.tasks.map((task)=>task.id === action.payload.id ? {\n                        ...task,\n                        ...action.payload.updates\n                    } : task),\n                error: null\n            };\n        case \"DELETE_TASK\":\n            return {\n                ...state,\n                tasks: state.tasks.filter((task)=>task.id !== action.payload),\n                error: null\n            };\n        case \"SET_LOADING\":\n            return {\n                ...state,\n                loading: action.payload\n            };\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                error: action.payload\n            };\n        case \"LOAD_TASKS\":\n            return {\n                ...state,\n                tasks: action.payload,\n                error: null\n            };\n        default:\n            return state;\n    }\n}\nconst TasksContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nfunction TasksProvider(param) {\n    let { children } = param;\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(tasksReducer, initialState);\n    // Cargar tareas al iniciar\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        reloadTasks();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const reloadTasks = async ()=>{\n        dispatch({\n            type: \"SET_LOADING\",\n            payload: true\n        });\n        try {\n            const res = await fetch(\"/api/tasks\");\n            const data = await res.json();\n            dispatch({\n                type: \"LOAD_TASKS\",\n                payload: data\n            });\n        } catch (error) {\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Error al cargar las tareas\"\n            });\n        } finally{\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n        }\n    };\n    const addTask = async (input)=>{\n        if (!input.title.trim()) {\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"El t\\xedtulo de la tarea no puede estar vac\\xedo\"\n            });\n            return;\n        }\n        if (input.title.length < 3) {\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"El t\\xedtulo debe tener al menos 3 caracteres\"\n            });\n            return;\n        }\n        dispatch({\n            type: \"SET_LOADING\",\n            payload: true\n        });\n        try {\n            const res = await fetch(\"/api/tasks\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    title: input.title\n                })\n            });\n            if (!res.ok) {\n                const errorData = await res.json();\n                throw new Error(errorData.error || \"Error al crear la tarea\");\n            }\n            const newTask = await res.json();\n            dispatch({\n                type: \"ADD_TASK\",\n                payload: newTask\n            });\n        } catch (error) {\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: error.message\n            });\n        } finally{\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n        }\n    };\n    const deleteTask = async (id)=>{\n        dispatch({\n            type: \"SET_LOADING\",\n            payload: true\n        });\n        try {\n            const res = await fetch(\"/api/tasks/\".concat(id), {\n                method: \"DELETE\"\n            });\n            if (!res.ok) {\n                throw new Error(\"Error al eliminar la tarea\");\n            }\n            dispatch({\n                type: \"DELETE_TASK\",\n                payload: id\n            });\n        } catch (error) {\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: error.message\n            });\n        } finally{\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n        }\n    };\n    const completeTask = async (id)=>{\n        dispatch({\n            type: \"SET_LOADING\",\n            payload: true\n        });\n        try {\n            const res = await fetch(\"/api/tasks/\".concat(id), {\n                method: \"PATCH\"\n            });\n            if (!res.ok) {\n                throw new Error(\"Error al completar la tarea\");\n            }\n            const updatedTask = await res.json();\n            dispatch({\n                type: \"UPDATE_TASK\",\n                payload: {\n                    id,\n                    updates: {\n                        completed: true\n                    }\n                }\n            });\n        } catch (error) {\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: error.message\n            });\n        } finally{\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n        }\n    };\n    const getSortedTasks = ()=>{\n        return [\n            ...state.tasks\n        ].sort((a, b)=>{\n            if (a.completed !== b.completed) {\n                return a.completed ? 1 : -1;\n            }\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        });\n    };\n    const value = {\n        state,\n        addTask,\n        deleteTask,\n        completeTask,\n        getSortedTasks,\n        reloadTasks\n    };\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TasksContext.Provider, {\n        value\n    }, children);\n}\nfunction useTasks() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(TasksContext);\n    if (context === undefined) {\n        throw new Error(\"useTasks debe ser usado dentro de un TasksProvider\");\n    }\n    return context;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useTasks.ts\n"));

/***/ })

});